{"version":3,"file":"pie-chart.js","sources":["../../../../../../src/charts/chartist/pie-chart.tsx"],"sourcesContent":["import { __assign } from \"tslib\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport ChartistGraph from \"react-chartist\";\r\nvar PieChart = function (_a) {\r\n    var label = _a.label, slice = _a.slice, data = _a.data, options = _a.options, percentageLabel = _a.percentageLabel;\r\n    var onDrawHandler = function (e) {\r\n        var _a;\r\n        var type = e.type, index = e.index, elem = e.element._node;\r\n        if (type === \"label\") {\r\n            elem.setAttribute(\"style\", \"font-size: \".concat((label === null || label === void 0 ? void 0 : label.width) || \"16px\", \"; fill: \").concat((label === null || label === void 0 ? void 0 : label.color) || \"rgba(255, 255, 255, 0.75)\"));\r\n        }\r\n        if (type === \"slice\") {\r\n            var sliceColor = (_a = slice === null || slice === void 0 ? void 0 : slice.colors) === null || _a === void 0 ? void 0 : _a[index];\r\n            elem.setAttribute(\"style\", \"fill: \".concat(sliceColor || \"#1b84e7\", \"; stroke: \").concat((slice === null || slice === void 0 ? void 0 : slice.stroke) || \"#fff\"));\r\n        }\r\n    };\r\n    data.series.reduce(function (a, b) { return a + b; });\r\n    var pieOptions = __assign(__assign({}, options), { labelInterpolationFnc: function (value) {\r\n            var _a, _b;\r\n            if (((_a = data === null || data === void 0 ? void 0 : data.labels) === null || _a === void 0 ? void 0 : _a.length) && ((_b = data === null || data === void 0 ? void 0 : data.labels) === null || _b === void 0 ? void 0 : _b.length) > 0) {\r\n                return value;\r\n            }\r\n            else if (percentageLabel) {\r\n                var valueTotal = data.series.reduce(function (a, b) { return a + b; });\r\n                return \"\".concat(Math.round((value / valueTotal) * 100), \"%\");\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        } });\r\n    return (_jsx(ChartistGraph, { listener: {\r\n            draw: function (e) { return onDrawHandler(e); },\r\n        }, data: data, options: pieOptions, type: \"Pie\" }, void 0));\r\n};\r\nexport default PieChart;\r\n"],"names":["PieChart","_a","label","slice","data","options","percentageLabel","series","reduce","a","b","pieOptions","__assign","labelInterpolationFnc","value","_b","labels","length","valueTotal","concat","Math","round","_jsx","ChartistGraph","listener","draw","e","type","index","elem","element","_node","setAttribute","width","color","sliceColor","colors","stroke","onDrawHandler"],"mappings":"oJAGIA,EAAW,SAAUC,OACjBC,EAAQD,EAAGC,MAAOC,EAAQF,EAAGE,MAAOC,EAAOH,EAAGG,KAAMC,EAAUJ,EAAGI,QAASC,EAAkBL,EAAGK,gBAYnGF,EAAKG,OAAOC,QAAO,SAAUC,EAAGC,UAAYD,EAAIC,SAC5CC,EAAaC,EAASA,EAAS,GAAIP,GAAU,CAAEQ,sBAAuB,SAAUC,OACxEb,EAAIc,MACgE,QAAlEd,EAAKG,MAAAA,OAAmC,EAASA,EAAKY,cAA2B,IAAPf,OAAgB,EAASA,EAAGgB,UAA+E,QAAlEF,EAAKX,MAAAA,OAAmC,EAASA,EAAKY,cAA2B,IAAPD,OAAgB,EAASA,EAAGE,QAAU,SAC9NH,EAEN,GAAIR,EAAiB,KAClBY,EAAad,EAAKG,OAAOC,QAAO,SAAUC,EAAGC,UAAYD,EAAIC,WAC1D,GAAGS,OAAOC,KAAKC,MAAOP,EAAQI,EAAc,KAAM,YAGlDJ,YAGXQ,EAAKC,EAAe,CAAEC,SAAU,CAChCC,KAAM,SAAUC,UA1BJ,SAAUA,OACtBzB,EACA0B,EAAOD,EAAEC,KAAMC,EAAQF,EAAEE,MAAOC,EAAOH,EAAEI,QAAQC,SACxC,UAATJ,GACAE,EAAKG,aAAa,QAAS,cAAcb,QAAQjB,MAAAA,OAAqC,EAASA,EAAM+B,QAAU,OAAQ,YAAYd,QAAQjB,MAAAA,OAAqC,EAASA,EAAMgC,QAAU,8BAEhM,UAATP,EAAkB,KACdQ,EAAmF,QAArElC,EAAKE,MAAAA,OAAqC,EAASA,EAAMiC,cAA2B,IAAPnC,OAAgB,EAASA,EAAG2B,GAC3HC,EAAKG,aAAa,QAAS,SAASb,OAAOgB,GAAc,UAAW,cAAchB,QAAQhB,MAAAA,OAAqC,EAASA,EAAMkC,SAAW,UAkB7HC,CAAcZ,KAC3CtB,KAAMA,EAAMC,QAASM,EAAYgB,KAAM,YAAS"}